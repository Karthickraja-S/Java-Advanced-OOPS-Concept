import java.util.Arrays;
import java.util.function.IntConsumer;

public class MaxKSubArray {
    public static void main(String[] args) {
        int[] arr = {1,2,3,1,2,5,2,1,9,1,0,4,2};
        int K = 2;
        // for K = 3, answer is 12 ( 2+1+9 ) , startIdx = 6 , endIdx = 8
        int windowSum = 0;
        int startIdx = 0;
        for(int i=0;i<K;i++) {
            windowSum += arr[i];
        }

        int maxWindowSum = windowSum;
        for(int i = K; i<arr.length; i++) {
            // think of window Sum, We already has a sum of arr size of K.
            // now we need to sum next immediate element and subtract the last of 1st added element RIGHT !
            windowSum = windowSum + arr[i] - arr[i-K];

            if(windowSum > maxWindowSum ) {
                startIdx = i-K+1 ;
                maxWindowSum = windowSum;
            }
        }
        System.out.println("Start Idx : "+startIdx);
        System.out.println("End Idx   : "+ (startIdx+K-1) );
        System.out.print("Max Window Element : ");
        Arrays.stream(arr).skip(startIdx).limit(K).forEach(value -> System.out.print(value+" "));
        System.out.println();
        System.out.println("Max window sum : "+maxWindowSum);

    }
}
