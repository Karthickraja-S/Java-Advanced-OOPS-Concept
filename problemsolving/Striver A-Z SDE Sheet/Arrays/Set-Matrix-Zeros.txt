###################################################
############# 1st solution ########################
###################################################

class Solution {
    public void makeRowColToZero(int[][] mat , int r, int c) {
        for(int column=0; column<mat[0].length ; column++) {
            if(r == -1) {
                break;
            }
            mat[r][column] = 0;
        }
         for(int row=0; row<mat.length ; row++) {
            if(c == -1) {
                break;
            }
            mat[row][c] = 0;
        }
    }
    public void setZeroes(int[][] matrix) {
        int R = matrix.length;
        int C = matrix[0].length;
        int rowMat[] = new int[R];
        int colMat[] = new int[C];
        for(int row=0;row<R;row++) {
            for(int col=0;col<C;col++){
                if(matrix[row][col]== 0){
                    System.out.println("row -"+row+" col - "+col);
                    // want to create a flag here. so we can make all row,col to 0
                    rowMat[row] = 1;
                    colMat[col] = 1;
                    // but u know that -1 is the value will come inside matrix.
                }
            }
        }
       for(int row=0;row<R;row++) {
        if(rowMat[row]==1) {
            makeRowColToZero(matrix,row,-1);
        }
        }
        for(int col = 0;col<C;col++) {
            if(colMat[col]==1){
                makeRowColToZero(matrix,-1,col);
            }
        }
    }
}

###################################################
############# 2nd solution ########################
###################################################

class Solution {
    
    public void setZeroes(int[][] matrix) {
        int R = matrix.length;
        int C = matrix[0].length;
        boolean[] rowMat = new boolean[R];
        boolean[] colMat = new boolean[C];
        for(int row=0;row<R;row++) {
            for(int col=0;col<C;col++){
                if(matrix[row][col]== 0){
                    System.out.println("row -"+row+" col - "+col);
                    rowMat[row] = true;
                    colMat[col] = true;
                }
            }
        }
       for(int row=0;row<R;row++){
        for(int col=0;col<C;col++){
            if(rowMat[row] || colMat[col]){
                matrix[row][col] = 0;
            }
        }
       }
    }
}

###################################################
############# 3rd solution ########################
###################################################class Solution {
    
    public void setZeroes(int[][] matrix) {
        int R = matrix.length;
        int C = matrix[0].length;
        int col0 = 1;
        for(int row=0;row<R;row++) {
            for(int col=0;col<C;col++) {
                if(matrix[row][col]==0) {
                    if(col!=0) {
                        matrix[0][col] = 0;
                    } else {
                       col0=0;
                    }
                    matrix[row][0] = 0;
                }
            }
        }
        for(int row=1;row<R;row++) {
            for(int col=1;col<C;col++) {
                if(matrix[row][col]!=0) {
                if(matrix[row][0] == 0 || matrix[0][col]==0) {
                    matrix[row][col]=0;
                }
            }
            }
        }
     //   System.out.println("col0 : "+col0+"R : "+R+"C: "+C);

        // now set for 1st row & first col.
        if(matrix[0][0]== 0) {
        for(int col=0;col<C;col++) {
            matrix[0][col] = 0;
        }
        }

        if(col0==0) {
            // mark first row fully 0
            for(int row=0;row<R;row++){
                matrix[row][0]=0;
            }
        }

        }
       
        }
    
